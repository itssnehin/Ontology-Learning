{
    "idea_extractor": {
        "round_one": "The following is a technical document segment. Briefly break down the topics (both specific and general concepts) relevant to this document. Explain your reasoning step by step.\n\nDocument:\n{chunk_content}\n\n### OUTPUT FORMAT:\n- General concepts: [List]\n- Specific concepts: [List]\n- Reasoning: [Explanation]",
        "round_two": "Based on the following topic breakdown, extract a taxonomy of component-based concepts for an ontology in IoT and antenna specifications. \nOnly include physical or abstract components (e.g., 'Antenna', 'FPC Antenna', 'DAC'), excluding properties (e.g., 'Frequency Range', 'Adhesive Backing').\n\nTopic Breakdown:\n{cot_round_one_response}\n\nOUTPUT FORMAT:\nRespond with a single JSON object containing one key: \"nodes\". The value of \"nodes\" should be a list of component-based concept strings.\nExample: {{\"nodes\": [\"Antenna\", \"FPC Antenna\", \"DAC\"]}}"
    },
    "relation_extractor": {
        "main_prompt": "You are an expert in ontology engineering. Your task is to extract an ontology subgraph from the following technical document, focusing on component-based concepts and their relations.\n\n1. Identify key domain concepts (classes) and their properties.\n2. Extract semantic relationships between them using relations like 'operatesIn', 'hasFeature', 'subclass_of'.\n\nOUTPUT FORMAT:\nRespond with a single JSON object with one key: \"relations\". The value should be a list of objects, where each object represents a single relation with \"source\", \"type\", and \"target\" keys.\n\nExample:\n{{\n    \"relations\": [\n        {{\"source\": \"FPC Antenna\", \"type\": \"subclass_of\", \"target\": \"Antenna\"}},\n        {{\"source\": \"Antenna\", \"type\": \"hasFeature\", \"target\": \"Adhesive Backing\"}}\n    ]\n}}\n\nDocument:\n{chunk_content}"
    },
    "schema_org_extractor": {
        "main_prompt": "Create Schema.org JSON-LD markup for this electronic component based on the context provided.\n\nComponent: {concept}\nContext: {context}\n\nRequirements:\n1. Use \"Product\" as the base @type\n2. Include standard Schema.org properties: name, description, category\n3. Add \"additionalType\" from Product Types Ontology when applicable\n4. Include technical properties as custom properties with \"elec:\" prefix\n5. Extract specifications like frequency, impedance, dimensions where available\n6. Format as valid JSON-LD\n\nExample format:\n{{\n  \"@context\": {{\n    \"@vocab\": \"https://schema.org/\",\n    \"elec\": \"https://example.org/electrical/\"\n  }},\n  \"@type\": \"Product\",\n  \"name\": \"{concept}\",\n  \"description\": \"Technical description from context\",\n  \"category\": \"Electronic Component\",\n  \"additionalType\": \"http://www.productontology.org/id/Appropriate_Type\",\n  \"elec:technicalProperty\": \"value if available\"\n}}\n\nOUTPUT: Valid JSON-LD only, no other text."
    }
}